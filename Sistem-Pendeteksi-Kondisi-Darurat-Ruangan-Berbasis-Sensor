// Library

#include <LiquidCrystal_I2C.h>
#include <DHT.h>
#include <Adafruit_Sensor.h>
#include <UniversalTelegramBot.h>
#include <ESP8266WiFi.h>
#include <ArduinoJson.h>


// Port pin kabel
#define PIR D3
#define DHTPIN D4
#define DHTTYPE DHT11
#define MQ2PIN A0
#define buzz D5
#define rLed D6
#define bLed D7

LiquidCrystal_I2C lcd(0x27, 16, 2);
DHT dht(DHTPIN, DHTTYPE);

// Variabel sensor
int sensor=0;
float temp, gasV, hum;

int suhuTerakhir = 0.0;
int batasGas = 300;
int suhuDarurat = 38;
bool buzzeract = false;
int entitas = 0;

const char* ssid = "";
const char* password = "";
const char* botToken = "";
const char*  chatID= "";

WiFiClientSecure client;
UniversalTelegramBot bot(botToken, client);

unsigned long lastTelegramTime = 0;         // Waktu terakhir pengiriman pesan
const unsigned long telegramInterval = 1000; // Interval pengiriman pesan (1 detik)

// Flag untuk memastikan pesan hanya terkirim sekali
bool gasAlertSent = false;
bool suhuAlertSent = false;
bool motionAlertSent = false;
bool teleSentMotion=true;

void setup() {
  Serial.begin(9600);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi Terhubung!");

  client.setInsecure(); // Nonaktifkan verifikasi SSL

  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Starting.");
  delay(250);
  lcd.setCursor(0, 0);
  lcd.print("Starting..");
  delay(250);
  lcd.setCursor(0, 0);
  lcd.print("Starting...");
  delay(250);
  lcd.setCursor(0, 0);
  lcd.print("Starting....");
  delay(250);
  lcd.setCursor(0, 1);
  lcd.print("Kelompok 1");
  delay(2000);
  dht.begin();
  pinMode(PIR, INPUT);
  pinMode(MQ2PIN, INPUT);
  pinMode(buzz, OUTPUT);
  pinMode(rLed, OUTPUT);
  pinMode(bLed, OUTPUT);
  bot.sendMessage(chatID, "ü§ñ Bot siap! Gunakan:\n/monitoring - Mulai monitoring\n/startmotion - Aktifkan sensor gerakan\n/stopmotion - Mematikan sensor gerakan", "");
  bareng3(1);
  lcd.clear();
}

void sendTelegramAlert(String message) {
  if (millis() - lastTelegramTime > telegramInterval) {
    bot.sendMessage("5344849595", message, "Markdown");
    lastTelegramTime = millis();
    Serial.println("Telegram Alert Sent: " + message);
  }
}

void bareng(int times) {
  for (int i = 0; i < times; i++) {
    digitalWrite(buzz, HIGH);
    digitalWrite(rLed, HIGH);
    delay(100);
    digitalWrite(buzz, LOW);
    digitalWrite(rLed, LOW);
    delay(100);
  }
}

void bareng2(int times) {
  for (int i = 0; i < times; i++) {
    digitalWrite(buzz, HIGH);
    digitalWrite(bLed, HIGH);
    delay(100);
    digitalWrite(buzz, LOW);
    digitalWrite(bLed, LOW);
    delay(100);
  }
}

void bareng3(int times) {
  for (int i = 0; i < times; i++) {
    digitalWrite(buzz, HIGH);
    digitalWrite(bLed, HIGH);
    digitalWrite(rLed, HIGH);
    delay(100);
    digitalWrite(buzz, LOW);
    digitalWrite(bLed, LOW);
    digitalWrite(rLed, LOW);
    delay(100);
  }
}

void sensorData(){
  temp = dht.readTemperature();
  hum = dht.readHumidity();
  gasV = analogRead(MQ2PIN);
  sensor = digitalRead(PIR);
}

void displayDataOnLCD() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Suhu: " + String(temp) + "C");
  lcd.setCursor(0, 1);
  lcd.print("Gas : "+ String(gasV) + "%");
  delay(2500);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Lembab : " + String(hum) + "%");
  lcd.setCursor(0, 1);
  lcd.print("Entitas: "+ String(entitas));
  delay(1000);
}

void checking(){

  if(teleSentMotion==1){
    if (sensor == HIGH && !motionAlertSent) 
    {
      sendTelegramAlert("‚ö†Ô∏è Peringatan: Gerakan terdeteksi! Gerakan : " + String(entitas+1));
      entitas++;
      motionAlertSent = true;
      bareng(3);
    } 
    else if (sensor == LOW)
    {
      motionAlertSent = false;
    }
  }
  if (gasV >= batasGas && !gasAlertSent) {
    gasAlertSent = true;
    sendTelegramAlert("‚ö†Ô∏è Peringatan: Gas dan Asap berbahaya terdeteksiüí®! Gas : " + String(gasV) + "%");
    lcd.clear();
    lcd.setCursor(4,0);
    lcd.print("GAS/ASAP");
    lcd.setCursor(2,1);
    lcd.print("TERDETEKSI!!!");
    bareng(60);
  } 
  
  else if (gasV < batasGas) 
  {
    gasAlertSent = false; // Reset flag jika kondisi aman
  }

  // Deteksi suhu berbahaya
  if (temp >= suhuDarurat && !suhuAlertSent) {
    sendTelegramAlert("‚ö†Ô∏è Peringatan: Suhu terlalu tinggiüî•! Suhu : " + String(temp) + "¬∞C");
    suhuAlertSent = true;
    lcd.clear();
    lcd.setCursor(2,0);
    lcd.print("SUHU RUANGAN");
    lcd.setCursor(0,1);
    lcd.print("TERLALU PANAS!!");
    bareng(60);
  } else if (temp < suhuDarurat) {
    suhuAlertSent = false; // Reset flag jika suhu kembali normal
  }

  // Deteksi gerakan

  if (temp >= suhuTerakhir + 2 || temp < suhuTerakhir) 
  {
    suhuTerakhir = temp;
    buzzeract = false;
  }

  if (temp >= suhuTerakhir + 1) 
  {
    sendTelegramAlert("‚¨ÜÔ∏è Suhu naik! Suhu : " + String(temp) + "¬∞C");
    lcd.clear();
    lcd.setCursor(3,0);
    lcd.print("SUHU NAIK");
    bareng2(1);
    suhuTerakhir = temp;
    buzzeract=true;
  }
  else if (temp < suhuTerakhir)
  {
    sendTelegramAlert("‚¨áÔ∏è Suhu Turun! Suhu : " + String(temp) + "¬∞C");
    lcd.clear();
    lcd.setCursor(2,0);  
    lcd.print("SUHU TURUN");
    bareng2(2);
  }
}

void sendTelegramMessage() {
  String message = "DATA MONITORING :\n";
  message += "Suhu               : " + String(temp) + " C\n";
  message += "Kelembaban  : " + String(hum) + " %\n";
  message += "Gas                 : " + String(gasV) + " %\n";
  message += "Gerakan         : " + String(entitas);

  if (millis() - lastTelegramTime > telegramInterval) {
    bot.sendMessage(chatID, message, "Markdown");
    lastTelegramTime = millis();
    Serial.println("\n"+message +"\n");
  }  
}

bool monitoringActive = false;

void processTelegramCommand() {
  int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
  
  while (numNewMessages) {
    for (int i = 0; i < numNewMessages; i++) {
      String chat_id = bot.messages[i].chat_id;
      String text = bot.messages[i].text;

      if (text == "/monitoring") {
        bot.sendMessage(chat_id, "üîÑ Monitoring dimulai! Anda akan menerima update sekarang.", "");
        sendTelegramMessage();
        monitoringActive = true;
        sendTelegramAlert("‚ö†Ô∏è Start Monitoring");
      }
      else if(text == "/startmotion"){
        bot.sendMessage(chat_id, "üîÑ Sensor Motion menyala! .", "");
        teleSentMotion=true;
      }
      else if(text == "/stopmotion"){
        bot.sendMessage(chat_id, "üîÑ Sensor Motion mati! .", "");
        teleSentMotion=false;
      }
      else {
        bot.sendMessage(chat_id, "ü§ñ Perintah tidak dikenali. Gunakan:\n/startmonitoring - Mulai monitoring suhu\n/stopmonitoring - Hentikan monitoring suhu", "");
      }
    }
    numNewMessages = bot.getUpdates(bot.last_message_received + 1);
  }
}

void loop() 
{  
  sensorData();
  displayDataOnLCD();
  checking();
  processTelegramCommand();
  delay(500); // Delay 0,5 detik 
}
